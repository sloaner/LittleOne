import com.jsloane.littleone.buildsrc.Libs

buildscript {
  repositories {
    google()
    mavenCentral()
  }
  dependencies {
    classpath Libs.Tools.androidGradlePlugin
    classpath Libs.Kotlin.gradlePlugin
    classpath Libs.Firebase.gradlePlugin
    classpath Libs.Hilt.gradlePlugin
  }
}

plugins {
  id 'com.diffplug.spotless' version '6.0.5'
  id "com.github.ben-manes.versions" version "0.41.0"
}

tasks.named("dependencyUpdates").configure {
  rejectVersionIf {
    def version = it.candidate.version
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { keyword -> version.toUpperCase().contains(keyword) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
  }
}

subprojects {
  tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
      // Treat all Kotlin warnings as errors (disabled by default)
      allWarningsAsErrors = project.hasProperty("warningsAsErrors") ? project.warningsAsErrors : false

      // Enable experimental coroutines APIs, including Flow
      freeCompilerArgs += '-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi'
      freeCompilerArgs += '-Xopt-in=kotlinx.coroutines.FlowPreview'
      freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'
      freeCompilerArgs += '-Xopt-in=kotlin.Experimental'

      // Set JVM target to 11
      jvmTarget = JavaVersion.VERSION_11
    }
  }

  spotless {
    kotlin {
      target '**/*.kt'
      targetExclude("$buildDir/**/*.kt")
      targetExclude('bin/**/*.kt')
      targetExclude('buildSrc/**/*.kt')

      ktlint("0.42.1").userData([android: "true"])
//      licenseHeaderFile rootProject.file('spotless/copyright.kt')
    }
  }
}

Object propOrDef(String propertyName, Object defaultValue) {
  def propertyValue = project.properties[propertyName]
  return propertyValue != null ? propertyValue : defaultValue
}
